<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAtAsAAAJNU0Z0AUkBTAIBAQQB
        AAEIAQABCAEAARABAAEQAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABQAMAASADAAEBAQABIAYAASD/
        AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/ACIAAy0BsgMvAaoDLwGqAy8BqgMvAaoDLwGqAygB
        vwMeASwDHgEsAygBvwMvAaoDLwGqAy8BqgMvAaoDLwGqAy0BsiQAAxQBGwM1AXwDNQGAAzUBgwMuAVQE
        AQwAAwwBEAM1AXkDNAGHAzQBhwM0AYcDNAGHAzQBhwM0AYcDNAGHAzQBhwM1AXkDDAEQGAADIQEyAzMB
        mAMbAdoDCwHwAwsB8AMbAdoDMwGYAyEBMhAAAy8BqhQAAy8BVQMvAVUDLwFVAy8BVRQAAy8BqiAAAyEB
        MQM1AYYDDgESAyQBOAMWAR8DJwE9AzUBhgQBCAADNAGQAzIBoAMzAWkDMwFpAzMBaQMzAWkDMwFpAzMB
        aQMzAWkDMwFpAzIBoAM0AZAQAAMHAQkDMgGbAxoB2QMzAWgDFQEcCAADFQEcAzMBaAMaAdkDMgGbAwcB
        CQgAAy8BqhQAAy8BVQMvAVUDLwFVAy8BVRQAAy8BqhwABAEDKwG4AzMBaAMzAZMDNQF8AzUBfgM1AXsD
        MQGjAy4BVAgAAzABpQMsAUsMAAMJAQwDCQEMDAADLAFLAzABpQwAAwcBCQMmAcIDLQGvAwYBBxgAAwYB
        BwMtAa8DJgHCAwcBCQQAAy8BqhQAAy8BVQMvAVUDLwFVAy8BVRQAAy8BqhwAAx0BKgMwAVgDNAGRAzUB
        eQMvAVUDNAGRAzUBgAMeASsDNQGDCAADMAGlAywBSwwAAzQBdgM0AXYMAAMsAUsDMAGlDAADMgGbAyMB
        yQMtAbAgAAMtAbADIwHJAzIBmwQAAy8BqhQAAy8BVQMvAVUDKgFHAzQBlAMvAVUDLwFVAy8BVQMvAVUD
        LwFVAygBvwMyAaADNQGAAzUBgAM1AYADNQGAAzUBgAM1AYADMwGaAyoBRQM1AYIDNQGGBAEDLwFVAzUB
        fAMkATgDNQGACAADMAGlAywBSwgAAwoBDQMnAcADJwHAAwoBDQgAAywBSwMwAaUIAAMhATEDGgHZAwoB
        DQMYAd4DIQExGAADIAEvAxgB3gMKAQ0DGgHZAyEBMQMvAaoUAAMvAVUDLwFVBAEDKgFHAy8BVQMvAVUD
        LwFVAy8BVQMvAVUDHgEsAzUBgAMyAaADMgGgAzIBoAMyAaADMgGgAzIBoAMyAaADNQF4AzIBYAM0AW0D
        NQGGAzUBeQMzAZMDDgESAzUBfAgAAzABpQMsAUsIAAMxAV8DLwGrAy8BqwMxAV8IAAMsAUsDMAGlCAAD
        MwGYAzMBaAQAAyoBRwMYAd0DHwEuEAADHgEsAxkB3AMqAUcEAAMzAWgDMwGYAy8BqhQAAy8BVQMvAVUE
        AQMqAUcDLwFVAy8BVQMvAVUDLwFVAy8BVQMeASwDNQGAAzUBgAM1AYADMgGgAzIBoAM1AYADNQGAAzUB
        gAMtAbEDHAEpAzIBYAMxAaIDNQGDAxcBIAM1AYYDFAEbCAADMAGlAywBSwgAAxsBJgMUAeQDFAHkAxsB
        JggAAywBSwMwAaUIAAMbAdoDFQEcCAADKwFJAxYB4QMvAagDNAFtAzQBbQMwAacDFgHhAywBSggAAxUB
        HAMbAdoDLwGqFAADLwFVAy8BVQMqAUcDNAGUAy8BVQMvAVUDLwFVAy8BVQMvAVUDKAG/AzUBgAMyAWAD
        MgFgCAADNQGAAzUBgAMyAaADMQGiAzUBeQM1AXkDMAGlAzABWQMwAacDLgFTDAADMAGlAywBSwwAAwMB
        BAMDAQQMAAMsAUsDMAGlCAADCwHxEAADLAFMAwoB8wMwAaYDMAGmAwoB8wMsAU0QAAMLAfEDKAG/Ay8B
        VQMvAVUDLwFVAy8BVQMvAVUDNAGUAyoBRwMvAVUDLwFVFAADLwGqAzUBgBAAAzIBoAMyAaAMAAMMARAD
        JQE7Ax0BKgMoAUEDKAFADAADNQGFAysBtQM0AYcDNAGHAzQBhwM0AYcDNAGHAzQBhwM0AYcDNAGHAysB
        tgM1AYUIAAMLAfAMAAMMAQ8DFAHjAx8BLQgAAx8BLQMUAeMDDAEPDAADCwHwAx4BLAMvAVUDLwFVAy8B
        VQMvAVUDLwFVAyoBRwQBAy8BVQMvAVUUAAMvAaoDNQGAAygBQAMyAWADNQGAAzUBgAMyAWADMgFkAzIB
        ZBQAAygBQAMoAUAMAAMGAQcDNQF/Ax4B0wMzAWkDMwFpAzMBaQMzAWkDMwFpAzMBaQMeAdMDNQF/AwYB
        BwgAAxsB2gMUARsIAAMtAU8DMAGkEAADMAGkAy0BTwgAAxQEGwHaAx4BLAMvAVUDLwFVAy8BVQMvAVUD
        LwFVAyoBRwQBAy8BVQMvAVUUAAMvAaoDNQGAAygBQAMyAWADNQGAAzUBgAMyAWADMgFkAy8BqwMMARAE
        AAMvAawDMgFgBAADKAFAAygBQBAAAyYBPAMsAbQYAAMsAbQDJgE8DAADMwGYAzMBZwgAAy4BUQMwAaQQ
        AAMwAaQDLgFRCAADMwFnAzMBmAMoAb8DLwFVAy8BVQMvAVUDLwFVAy8BVQM0AZQDKgFHAy8BVQMvAVUU
        AAMvAaoDNQGAAygBQAMyAWADNQGAAzUBgAMyAWAEAAMMARADMwGWAzQBigM0AYoDMwGWAwwBEAMoAUAD
        KAFAEAADJAE4AysBuBgAAyoBuQMkATgMAAMhATEDGwHYAwUBBgQAAwwBEAMUAeMDHgErCAADHgErAxQB
        4wMMARAEAAMFAQYDGwHYAyEBMQMvAaoUAAMvAVUDLwFVAy8BVQMvAVUUAAMvAaoDNQGAAygBQAMyAWAD
        NQGAAzUBgAMyAWAIAAMyAWADLwGsBAADDAEQAzMBlQMzAZUDMwGVAxQBGwwAAw4BEgMTAeYDBgEHEAAD
        BgEHAxMB5gMOARIQAAMyAZsDMwGTCAADKgFHAxQB4wMxAaIDMQGiAxQB4wMqAUcIAAMzAZMDMgGbBAAD
        LwGqFAADLwFVAy8BVQMvAVUDLwFVFAADLwGqAzIBoAM1AYADNQGAAzUBgAM1AYADNQGAAzUBgAM1AYAD
        NQGAAzUBgAM1AYADNQGAAy8BqAMGAQcDBgEHAzUBhRAAAzIBmwM0AZIEAQgABAEDNAGSAzMBmhQAAwcB
        CQMmAcIDMwGTAwUBBgQAAwwBEAMuAVIDLgFSAwwBEAQAAwUBBgMzAZMDJgHCAwcBCQQAAy8BqhQAAy8B
        VQMvAVUDLwFVAy8BVRQAAy8BqjAAAzUBhQMGAQcDBgEHAzUBhRAAAwgBCgMsAbMDJAHHAzQBdgM0AXYD
        JAHHAywBswMIAQoYAAMHAQkDMgGbAxsB2AMzAWcDFAEbCAADFAEbAzMBZwMbAdgDMgGbAwcBCQgAAy0B
        sgMvAaoDLwGqAy8BqgMvAaoDLwGqAygBvwMeASwDHgEsAygBvwMvAaoDLwGqAy8BqgMvAaoDLwGqAy0B
        sjAAAxQBGwM1AYUDNQGFAxQBGxgAAycBPwM1AX0DNQF9AycBPygAAyEBMgMzAZgDGwHaAwsB8AMLAfAD
        GwHaAzMBmAMhATIQAAFCAU0BPgcAAT4DAAEoAwABQAMAASADAAEBAQABAQYAAQEWAAP/gwAB/wGBAcAB
        AwHwAQ8BfAE+Af8BAAHAAQMBwQGDAXwBPgH+AQABzgFzAYcB4QF8AT4B/gEAAc4BcwGPAfEBfAMAAcwB
        MwEHAeABfAMAAcwBMwEjAcQBfAMAAcwBMwEwAQwBfAEAARgBAQHOAXMBeAEeAQABPgF5AcEBwAEDAXEB
        jgEAAT4BAAH5AcABAwEzAcwBAAE+AQABSQLnATMBzAEAAT4BAgEBAucBEQGIAXwBPgEDASAB4wHHAZgB
        GQF8AT4CAAHxAY8BhAEhAXwBPgH/AvABDwHBAYMCAAH/AfAB/AE/AfABDws=
</value>
  </data>
</root>